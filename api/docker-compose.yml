# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:
  db:
    container_name: go.db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - '1433:1433'
    environment:
      ACCEPT_EULA: 'Y'
      MSSQL_SA_PASSWORD: 'P@ssw0rd123456'
      MSSQL_PID: 'Express'
    volumes:
      - 'appointment-app-db-1:/var/opt/mssql'
    networks:
      - appointment-app
  api:
    container_name: go.api
    build:
      context: .
      dockerfile: Appointment.API/Dockerfile
    depends_on:
      - db
    ports:
      - '8080:80'
      - '8081:443'
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      ASPNETCORE_URLS: 'https://+:443;http://+:80'
      ASPNETCORE_HTTPS_PORT: '8081'
    env_file:
      - ./dev.env
    networks:
      - appointment-app
    volumes:
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https
      - ${USERPROFILE}\.aws\credentials:/home/app/.aws/credentials:ro
      - ${USERPROFILE}\.aws\config:/home/app/.aws/config:ro
  aws.cognito:
    container_name: go.cognito
    build:
      context: .
      dockerfile: Appointment.API.AWS.Cognito/Dockerfile
    ports:
      - '8090:80'
      - '8091:443'
    depends_on:
      - db
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      ASPNETCORE_URLS: 'https://+:443;http://+:80'
      ASPNETCORE_HTTPS_PORT: '8091'
    env_file:
      - ./dev.env
    networks:
      - appointment-app
    volumes:
      - ${APPDATA}\microsoft\UserSecrets\:/root/.microsoft/usersecrets
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https
      - ${USERPROFILE}\.aws\credentials:/home/app/.aws/credentials:ro
      - ${USERPROFILE}\.aws\config:/home/app/.aws/config:ro
  #watchtower:
  #  image: containrrr/watchtower
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #    - $HOME/.docker/config.json:/config.json
  #  command: --interval 30
networks:
  appointment-app:
    driver: bridge
volumes:
  appointment-app-db-1:
    driver: local
